<Window 
  x:Class="NekoBoiNick.MediaArchiveTool.MainWindow"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:system="clr-namespace:System;assembly=mscorlib"
  xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
  xmlns:local="clr-namespace:NekoBoiNick.MediaArchiveTool"
  xmlns:dataDomain="clr-namespace:NekoBoiNick.MediaArchiveTool.DataDomain"
  WindowStartupLocation="CenterScreen"
  Title="Material Design in XAML" 
  AutomationProperties.Name="{Binding Title, RelativeSource={RelativeSource Self}}"
  Width="800"
  Height="450"
  TextElement.Foreground="{DynamicResource MaterialDesignBody}"
  TextElement.FontWeight="Regular"
  TextElement.FontSize="13"
  TextOptions.TextFormattingMode="Ideal" 
  TextOptions.TextRenderingMode="Auto"
  Background="{DynamicResource MaterialDesignPaper}"
  FontFamily="{md:MaterialDesignFont}">
  <Window.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ListView.xaml" />
      </ResourceDictionary.MergedDictionaries>

      <Style x:Key="TListItemStyle" TargetType="ListViewItem" BasedOn="{StaticResource MaterialDesignGridViewItem}">
        <Style.Resources>
          <!-- Item Selection color -->
          <SolidColorBrush x:Key="MaterialDesignSelection" />
          <!-- Mouse over color and separator color -->
          <SolidColorBrush x:Key="MaterialDesignDivider" />
        </Style.Resources>
        <!--<Setter Property="Background" />-->

        <Style.Triggers>
          <!-- Overriding colors by duplicating triggers from the base style-->
          <Trigger Property="IsMouseOver" Value="True">
            <!--<Setter Property="Background" />-->
          </Trigger>
          <MultiTrigger>
            <MultiTrigger.Conditions>
              <Condition Property="IsSelected" Value="True" />
              <Condition Property="Selector.IsSelectionActive" Value="False" />
            </MultiTrigger.Conditions>
            <!--<Setter Property="Background" />-->
          </MultiTrigger>
        </Style.Triggers>
      </Style>
    </ResourceDictionary>
  </Window.Resources>
  <md:DialogHost
    Identifier="RootDialog"
    DialogTheme="Inherit"
    SnackbarMessageQueue="{Binding ElementName=MainSnackbar, Path=MessageQueue}">
    <md:DrawerHost
      IsLeftDrawerOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked}">
      <md:DrawerHost.LeftDrawerContent>
        <StackPanel MinWidth="220">
          <ToggleButton 
                        Style="{StaticResource MaterialDesignHamburgerToggleButton}" 
                        DockPanel.Dock="Top"
                        HorizontalAlignment="Right" 
                        Margin="16"
                        IsChecked="{Binding ElementName=MenuToggleButton, Path=IsChecked, Mode=TwoWay}"/>
          <TextBox 
              x:Name="TypesSearchBox"
              Text="{Binding SearchKeyword, UpdateSourceTrigger=PropertyChanged}"
              DockPanel.Dock="Top"
              Margin="16, 4"
              Width="200"
              md:HintAssist.Hint="Search Types &amp; Tags"
              md:HintAssist.IsFloating="True"
              md:TextFieldAssist.HasClearButton="True"
              md:TextFieldAssist.HasOutlinedTextField="True"
              md:TextFieldAssist.DecorationVisibility="Collapsed"
              md:TextFieldAssist.TextFieldCornerRadius="4"/>
          <StackPanel Orientation="Horizontal" Width="200" Margin="0,8,0,0">
            <md:PackIcon Kind="Information"/>
            <TextBlock Text="Types of Files" Margin="32 0 32 0"/>
          </StackPanel>
          <ListBox
            x:Name="TypeItemListBox"
            SelectedIndex="{Binding SelectedIndex}"
            SelectedItem="{Binding SelectedItem, UpdateSourceTrigger=PropertyChanged}"
            ItemsSource="{Binding TypeItems, FallbackValue={x:Null}}"
            AutomationProperties.Name="TypeItemsListBox" Margin="0,4,0,4">
            <ListBox.Resources>
              <Style TargetType="ScrollBar" BasedOn="{StaticResource MaterialDesignScrollBarMinimal}"/>
            </ListBox.Resources>

            <ListBox.ItemTemplate>
              <DataTemplate DataType="domainData:TypeItem">
                <StackPanel Orientation="Horizontal">
                  <md:PackIcon x:Name="PackIcon" Kind="Alert" VerticalAlignment="Center"/>
                  <TextBlock Text="{Binding DisplayName}" Margin="32 0 32 0" AutomationProperties.AutomationId="TypesPage" />
                </StackPanel>
                <DataTemplate.Triggers>
                  <DataTrigger Binding="{Binding Name}" Value="file">
                    <Setter TargetName="PackIcon" Property="Kind" Value="Xml" />
                  </DataTrigger>
                  <DataTrigger Binding="{Binding Name}" Value="image">
                    <Setter TargetName="PackIcon" Property="Kind" Value="Image" />
                  </DataTrigger>
                  <DataTrigger Binding="{Binding Name}" Value="video">
                    <Setter TargetName="PackIcon" Property="Kind" Value="YoutubePlay" />
                  </DataTrigger>
                  <DataTrigger Binding="{Binding Name}" Value="gif">
                    <Setter TargetName="PackIcon" Property="Kind" Value="Gif" />
                  </DataTrigger>
                </DataTemplate.Triggers>
              </DataTemplate>
            </ListBox.ItemTemplate>
          </ListBox>
          <Border BorderBrush="{DynamicResource MaterialDesignDivider}" BorderThickness="0 0 0 1" Margin="0,0,0,4" />
          <StackPanel Orientation="Horizontal" Width="200" Margin="0,4,0,0">
            <md:PackIcon Kind="Information"/>
            <TextBlock Text="Tags" Margin="32 0 32 0"/>
          </StackPanel>
          <ListBox 
            x:Name="TagItemListBox"
            SelectedIndex="{Binding SelectedIndex}"
            SelectedItem="{Binding SelectedItem, UpdateSourceTrigger=PropertyChanged}"
            ItemsSource="{Binding TagItems}"
            AutomationProperties.Name="TagItemsListBox" Margin="0,4,0,4">
            <ListBox.Resources>
              <Style TargetType="ScrollBar" BasedOn="{StaticResource MaterialDesignScrollBarMinimal}"/>
            </ListBox.Resources>

            <ListBox.ItemTemplate>
              <DataTemplate DataType="domainData:TagItem">
                <StackPanel Orientation="Horizontal">
                  <md:PackIcon x:Name="PackIcon" Kind="Hashtag" VerticalAlignment="Center"/>
                  <TextBlock Text="{Binding DisplayName}" Margin="32 0 32 0" AutomationProperties.AutomationId="TagPage" />
                </StackPanel>
              </DataTemplate>
            </ListBox.ItemTemplate>
          </ListBox>
          <Border BorderBrush="{DynamicResource MaterialDesignDivider}" BorderThickness="0 0 0 1" />
        </StackPanel>
      </md:DrawerHost.LeftDrawerContent>

      <StackPanel>
        <md:ColorZone
          Padding="16"
          md:ShadowAssist.ShadowDepth="Depth2"
          Mode="PrimaryMid"
          DockPanel.Dock="Top">
          <StackPanel Orientation="Horizontal">
            <ToggleButton
              x:Name="MenuToggleButton"
              Style="{StaticResource MaterialDesignHamburgerToggleButton}"
              IsChecked="False" 
              AutomationProperties.Name="HamburgerToggleButton"/>
          </StackPanel>
        </md:ColorZone>
      </StackPanel>
    </md:DrawerHost>
  </md:DialogHost>
</Window>
